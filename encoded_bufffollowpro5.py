import base64
exec(base64.b64decode("""ZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUNCmZyb20gdGhyZWFkaW5nIGltcG9ydCBUaHJlYWQNCmltcG9ydCB0aW1lLG9zLHN5cw0KdHJ5Og0KCWltcG9ydCByZXF1ZXN0cw0KZXhjZXB0IDoNCglvcy5zeXN0ZW0oJ3BpcCBpbnN0YWxsIHJlcXVlc3RzJykNCglpbXBvcnQgcmVxdWVzdHMNCg0KZGVtID0gMQ0KbGlzdF9pZCA9IFtdDQoNCmRlZiBjbGVhcigpOg0KICAgIG9zLnN5c3RlbSgiY2xzIiBpZiBvcy5uYW1lID09ICJudCIgZWxzZSAiY2xlYXIiKQ0KDQpkZWYgYmFubmVyKCk6DQoJYmFubmVyX2xvZ28gPSAiIiINCglcMDMzWzE7MzdtVEjGr8agTkcgSEnhu4ZVIDogXDAzM1sxOzMxbVRRTi1UT09MICAgICBcMDMzWzE7MzdtQ09QUFlSSUdIVCA6IFwwMzNbMTszMW1U4burIFF1YW5nIE5hbQ0K4pWU4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWXDQpcMDMzWzE7MzVtIOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyAg4paI4paI4paI4paI4paI4paI4pWXICAg4paI4paI4paI4pWXICAg4paI4paI4pWXICAgICAgIOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilojilojilojilojilZcgIOKWiOKWiOKWiOKWiOKWiOKWiOKVlyDilojilojilZcNClwwMzNbMTszN20g4pWa4pWQ4pWQ4paI4paI4pWU4pWQ4pWQ4pWdIOKWiOKWiOKVlOKVkOKVkOKVkOKWiOKWiOKVlyAg4paI4paI4paI4pWXICAg4paI4paI4pWXICAgICAgIOKVmuKVkOKVkOKWiOKWiOKVlOKVkOKVkOKVneKWiOKWiOKVlOKVkOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVlOKVkOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVkSANClwwMzNbMTszNW0gICAg4paI4paI4pWRICAgIOKWiOKWiOKVkSAgIOKWiOKWiOKVkSAg4paI4paI4pWU4paI4paI4pWXIOKWiOKWiOKVkeKWiOKWiOKWiOKWiOKWiOKVlyAgICDilojilojilZEgICDilojilojilZEgICDilojilojilZHilojilojilZEgICDilojilojilZHilojilojilZEgDQpcMDMzWzE7MzdtICAgIOKWiOKWiOKVkSAgICDilojilojilZEgICDilojilojilZEgIOKWiOKWiOKVkeKVmuKWiOKWiOKVl+KWiOKWiOKVkeKVmuKVkOKVkOKVkOKVkOKVnSAgICDilojilojilZEgICDilojilojilZEgICDilojilojilZHilojilojilZEgICDilojilojilZHilojilojilZENClwwMzNbMTszNW0gICAg4paI4paI4pWRICAgIOKWiOKWiOKVkeKWhOKWhCDilojilojilZEgIOKWiOKWiOKVkSDilZrilojilojilojilojilZEgICAgICAgICAg4paI4paI4pWRICAg4paI4paI4pWRICAg4paI4paI4pWR4paI4paI4pWRICAg4paI4paI4pWR4paI4paI4pWRDQpcMDMzWzE7MzdtICAgIOKVmuKVkOKVnSAgICDilZrilojilojilojilojilojilojilZTilZ0gIOKVmuKVkOKVnSAg4pWa4pWQ4pWQ4pWQ4pWdICAgICAgICAgIOKWiOKWiOKVkSAgIOKVmuKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKVmuKWiOKWiOKWiOKWiOKWiOKWiOKVlOKVneKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVlyANCuKVmuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVnQ0KXDAzM1sxOzMxbVtcMDMzWzE7MzdtPS49XDAzM1sxOzMxbV0gXDAzM1sxOzM3bT0+IFwwMzNbMTszMW1Db3B5cmlnaHQgQnk6IFwwMzNbMTszNW1U4burIFF1YW5nIE5hbSANClwwMzNbMTszMW1bXDAzM1sxOzM3bT0uPVwwMzNbMTszMW1dIFwwMzNbMTszN209PiBcMDMzWzE7MzJtWmFsbzogXDAzM1sxOzM0bTA4ODgzODU1MzYgDQpcMDMzWzE7MzFtW1wwMzNbMTszN209Lj1cMDMzWzE7MzFtXSBcMDMzWzE7MzdtPT4gXDAzM1sxOzM2bUZhY2Vib29rOiBcMDMzWzE7MzdtRmIuY29tL1VTRVIuVFVRVUFOR05BTSANClwwMzNbMTszMW1bXDAzM1sxOzM3bT0uPVwwMzNbMTszMW1dIFwwMzNbMTszN209PiBcMDMzWzA7OTNtQm94IFphbG86IGh0dHBzOi8vemFsby5tZS9nL2hoa3hsejM3OQ0KXDAzM1sxOzMxbVtcMDMzWzE7MzdtPS49XDAzM1sxOzMxbV0gXDAzM1sxOzM3bT0+IFwwMzNbMDs5M21Ub29sIEJ1ZmYgRm9sbG93IELhurFuZyBQcm81IA0KXDAzM1sxOzM3bS0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIC0gLSAtIA0KCSIiIg0KCWZvciBpIGluIGJhbm5lcl9sb2dvOg0KCQlzeXMuc3Rkb3V0LndyaXRlKGkpDQoJCXN5cy5zdGRvdXQuZmx1c2goKQ0KCQl0aW1lLnNsZWVwKDAuMDAwMDEpDQoJcHJpbnQoIiAiLGVuZD0nXG4nKQ0KYmFubmVyKCkJDQpjb29raWUgPSBpbnB1dCgnVnVpIEzDsm5nIE5o4bqtcCBDT09LSUUgRmFjZWJvb2sgQ2jhu6lhIFBybzUgOiAnKQ0KaWRfY29va2llID0gY29va2llLnNwbGl0KCdjX3VzZXI9JylbMV0uc3BsaXQoJzsnKVswXQ0KaWQgPSBpbnB1dCgnSUQgRmFjZWJvb2sgQ+G6p24gQnVmZiA6ICcpDQpoZWFkZXJzID0gew0KCSdjb29raWUnOiBjb29raWUNCn0NCnByaW50KCLEkGFuZyBDaGVjayBMaXZlIENvb2tpZS4uLiIsIGVuZD0iXG4iKQ0KY2xlYXIoKQ0KdHJ5Og0KCWZpbmRfZGF0YSA9IHJlcXVlc3RzLmdldCgiaHR0cHM6Ly9tLmZhY2Vib29rLmNvbS8iLCBoZWFkZXJzPWhlYWRlcnMpLnRleHQNCglmYl9kdHNnID0gZmluZF9kYXRhLnNwbGl0KCc8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJmYl9kdHNnIiB2YWx1ZT0iJylbMV0uc3BsaXQoJyInKVswXQ0KCWphem9lc3QgPSBmaW5kX2RhdGEuc3BsaXQoJzxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9Imphem9lc3QiIHZhbHVlPSInKVsxXS5zcGxpdCgnIicpWzBdDQoJY2xlYXIoKQ0KCXByaW50KCJDaGVjayBMaXZlIENvb2tpZSBTVUNDRVNTIiwgZW5kPSJcbiIpDQpleGNlcHQ6DQoJcHJpbnQoZiJDb29raWUge2Nvb2tpZX0gRGllIFZ1aSBMw7JuZyBLaeG7g20gVHJhIEzhuqFpISEhIikNCglxdWl0KCkNCmNsZWFyKCkNCg0KZGF0YSA9IHsNCgknZmJfZHRzZyc6IGZiX2R0c2csDQoJJ2phem9lc3QnOiBqYXpvZXN0LA0KCSd2YXJpYWJsZXMnOiAneyJzaG93VXBkYXRlZExhdW5jaHBvaW50UmVkZXNpZ24iOnRydWUsInVzZUFkbWluZWRQYWdlc0ZvckFjdGluZ0FjY291bnQiOmZhbHNlLCJ1c2VOZXdQYWdlc1lvdU1hbmFnZSI6dHJ1ZX0nLA0KCSdkb2NfaWQnOiAnNTMwMDMzODYzNjY4MTY1MicNCgl9DQpnZXRpZHBybzUgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovL3d3dy5mYWNlYm9vay5jb20vYXBpL2dyYXBocWwvJywgaGVhZGVycyA9IGhlYWRlcnMsIGRhdGEgPSBkYXRhKS5qc29uKClbJ2RhdGEnXVsndmlld2VyJ11bJ2FjdG9yJ11bJ3Byb2ZpbGVfc3dpdGNoZXJfZWxpZ2libGVfcHJvZmlsZXMnXVsnbm9kZXMnXQ0KZm9yIGkgaW4gZ2V0aWRwcm81Og0KCWlkX3Byb2ZpbGUgPSBpWydwcm9maWxlJ11bJ2lkJ10NCglsaXN0X2lkLmFwcGVuZChpZF9wcm9maWxlKQ0KcHJpbnQoZidJRCA6IHtpZF9jb29raWV9IHx8IFBBR0UgOiB7bGVuKGxpc3RfaWQpfSBQQUdFJykNCg0Kc29fbHVvbmcgPSBpbnQoaW5wdXQoJ1Phu5AgTMav4buiTkcgRk9MTE9XIE1V4buQTiBUxIJORzogJykpDQpjbGVhcigpDQpkZWYgZm9sbG93KGlkLGZiX2R0c2csamF6b2VzdCxjb29raWUsaWRfcHJvZmlsZSk6DQoJaGVhZGVycz17DQoJCSdjb29raWUnOiBmJ3tjb29raWV9IGlfdXNlcj17aWRfcHJvZmlsZX0gOyAnLA0KCQkncmVmZXJlcic6IGYnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3tpZH0nLA0KCQknc2VjLWNoLXByZWZlcnMtY29sb3Itc2NoZW1lJzogJ2xpZ2h0JywNCgkJJ3NlYy1jaC11YSc6ICciTm90X0EgQnJhbmQiO3Y9Ijk5IiwgIkdvb2dsZSBDaHJvbWUiO3Y9IjEwOSIsICJDaHJvbWl1bSI7dj0iMTA5IicsDQoJCSdzZWMtY2gtdWEtZnVsbC12ZXJzaW9uLWxpc3QnOiAnIk5vdF9BIEJyYW5kIjt2PSI5OS4wLjAuMCIsICJHb29nbGUgQ2hyb21lIjt2PSIxMDkuMC41NDE0LjEzMiIsICJDaHJvbWl1bSI7dj0iMTA5LjAuNTQxNC4xMzIiJywNCgkJJ3NlYy1jaC11YS1wbGF0Zm9ybS12ZXJzaW9uJzogJyI2LjAiJywNCgkJJ3NlYy1mZXRjaC1kZXN0JzogJ2VtcHR5JywNCgkJJ3NlYy1mZXRjaC1tb2RlJzogJ2NvcnMnLA0KCQknc2VjLWZldGNoLXNpdGUnOiAnc2FtZS1vcmlnaW4nLA0KCQkndXNlci1hZ2VudCc6ICdNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgNi4wOyBOZXh1cyA1IEJ1aWxkL01SQTU4TikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwOS4wLjAuMCBNb2JpbGUgU2FmYXJpLzUzNy4zNicsDQoJCSd4LWFzYmQtaWQnOiAnMTk4Mzg3JywNCgkJJ3gtZmItZnJpZW5kbHktbmFtZSc6ICdDb21ldFVzZXJGb2xsb3dNdXRhdGlvbicsDQoJCSd4LWZiLWxzZCc6ICc1bkROMGlETWI1REpmOTlQLU43YmNtJywNCgkJJ0Nvbm5lY3Rpb24nOiAna2VlcC1hbGl2ZScNCgl9DQoJZGF0YSA9IHsNCgkJJ2ZiX2R0c2cnOiBmYl9kdHNnLA0KCQknamF6b2VzdCc6IGphem9lc3QsDQoJCSdmYl9hcGlfY2FsbGVyX2NsYXNzJzogJ1JlbGF5TW9kZXJuJywNCgkJJ2ZiX2FwaV9yZXFfZnJpZW5kbHlfbmFtZSc6ICdDb21ldFVzZXJGb2xsb3dNdXRhdGlvbicsDQoJCSd2YXJpYWJsZXMnOiBmJ3t7ImlucHV0Ijp7eyJhdHRyaWJ1dGlvbl9pZF92MiI6IlByb2ZpbGVDb21ldFRpbWVsaW5lTGlzdFZpZXdSb290LnJlYWN0LGNvbWV0LnByb2ZpbGUudGltZWxpbmUubGlzdCx2aWFfY29sZF9zdGFydCwxNjgzNjcxMzU2MjY3LDkyMzIwNywxOTAwNTU1Mjc2OTY0NjgsIiwiaXNfdHJhY2tpbmdfZW5jcnlwdGVkIjpmYWxzZSwic3Vic2NyaWJlX2xvY2F0aW9uIjoiUFJPRklMRSIsInN1YnNjcmliZWVfaWQiOiJ7aWR9IiwidHJhY2tpbmciOm51bGwsImFjdG9yX2lkIjoiMTAwMDM3NTMzMTYwNjExIiwiY2xpZW50X211dGF0aW9uX2lkIjoiMyJ9fSwgInNjYWxlIjoxfX0nLA0KCQknc2VydmVyX3RpbWVzdGFtcHMnOiAndHJ1ZScsDQoJCSdkb2NfaWQnOiAnNjgwODE0NDQyOTIwMTkwMCcNCgl9DQoJYnVmZl9mb2xsb3cgPSByZXF1ZXN0cy5wb3N0KCdodHRwczovL3d3dy5mYWNlYm9vay5jb20vYXBpL2dyYXBocWwvJywgaGVhZGVycz1oZWFkZXJzLCBkYXRhPWRhdGEpDQoJcHJpbnQoZid7ZGF0ZXRpbWUubm93KCkuc3RyZnRpbWUoIiVIOiVNOiVTIil9IDogVOG7qiBRVUFORyBOQU0gOiBTVUNDRVNTIDp7aWRfcHJvZmlsZX0nKQ0KZm9yIGlkX3Byb2ZpbGUgaW4gbGlzdF9pZDoNCglUaHJlYWQodGFyZ2V0PWZvbGxvdyxhcmdzPShpZCxmYl9kdHNnLGphem9lc3QsY29va2llLGlkX3Byb2ZpbGUpKS5zdGFydCgpDQoJdGltZS5zbGVlcCgzKQ0KCWRlbSArPSAxDQoJaWYgZGVtID09IHNvX2x1b25nOg0KCQlwcmludCgnSE/DgE4gVEjDgE5IICEgJyk7YnJlYWs7cXVpdCgpDQoJZWxzZToNCgkJY29udGludWU="""))